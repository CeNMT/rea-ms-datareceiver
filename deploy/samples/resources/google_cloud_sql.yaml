# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

########################################
############## Cloud SQL ###############
########################################

# This sections sets up billing acccount and folder under which the projects must be deployed

overall:
  billing_account: XXXXXX-XXXXXX-XXXXXX
  domain: dpt.healthcare
  # Optional ID of the organization that the projects will be created under (pattern: ^[0-9]{8,25}$)
  # organization_id:
  # Optional ID of the folder that the projects will be created under (pattern: ^[0-9]{8,25}$)
  # folder_id:

generated_fields_path: ./generated_fields.yaml

# projects deployed in the cloud are listed
projects:
  # projects' names and the thier groups must be changed as necessary
  - project_id: example-project
    owners_group: ownergroup@domain
    auditors_group: auditgroup@domain

    # Bigquery dataset stores audit logs of the project and it's resources
    # Storage bucket holds GCS logs if the project has storage buckets
    audit:
      logs_bigquery_dataset:
        dataset_id: data_logs
        location: EU
      logs_storage_bucket:
        name: data-logs
        location: EU

    # Storage bucket stores the terraform states of the resources in the projects.
    devops:
      state_storage_bucket:
        name: data-state
        location: EU

    # Resources deployed which are not inbuilt in DPT using JSON
    terraform_deployments:
      resources:
        config:
          resource:
          - google_compute_network:
              private_network:
                name: private-network
            google_compute_global_address:
              private_ip_address:
                name: private-ip-address
                purpose: VPC_PEERING
                address_type: INTERNAL
                prefix_length: 16
                network: ${google_compute_network.private_network.self_link}
            google_service_networking_connection:
              private_vpc_connection:
                network: ${google_compute_network.private_network.self_link}
                service: servicenetworking.googleapis.com
                reserved_peering_ranges:
                - ${google_compute_global_address.private_ip_address.name}
            random_id:
              db_name_suffix:
                byte_length: 4
            google_sql_database_instance:
              instance:
                name: private-instance-${random_id.db_name_suffix.hex}
                region: us-central1
                depends_on:
                - google_service_networking_connection.private_vpc_connection
                settings:
                  tier: db-f1-micro
                  ip_configuration:
                    ipv4_enabled: false
                    private_network: ${google_compute_network.private_network.self_link}
                  backup_configuration:
                    binary_log_enabled: true
                    enabled: true
              replica-instance:
                name: replica-private-instance-${random_id.db_name_suffix.hex}
                region: us-central1
                master_instance_name: ${google_sql_database_instance.instance.name}
                depends_on:
                - google_service_networking_connection.private_vpc_connection
                settings:
                  tier: db-f1-micro
                  ip_configuration:
                    ipv4_enabled: false
                    private_network: ${google_compute_network.private_network.self_link}
                replica_configuration:
                  failover_target: true
                  master_heartbeat_period: 60000
